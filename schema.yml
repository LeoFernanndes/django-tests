openapi: 3.0.3
info:
  title: Django Tests Project API
  version: 1.0.0
  description: Project dedicated to implement DRF POCs
paths:
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/api/auth/login/:
    post:
      operationId: v1_api_auth_login_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCookieToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginCookieToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginCookieToken'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginCookieToken'
          description: ''
  /api/v1/api/auth/logout/:
    post:
      operationId: v1_api_auth_logout_create
      description: Logout view that clears cookies
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/api/auth/refresh/:
    post:
      operationId: v1_api_auth_refresh_create
      description: Refresh access token using refresh token from cookie
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/files/:
    get:
      operationId: v1_files_list
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          description: ''
    post:
      operationId: v1_files_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileCreate'
          description: ''
  /api/v1/files/{id}/:
    get:
      operationId: v1_files_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRetrieve'
          description: ''
    put:
      operationId: v1_files_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    patch:
      operationId: v1_files_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFile'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    delete:
      operationId: v1_files_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/files/{id}/get_download_presigned_url/:
    get:
      operationId: v1_files_get_download_presigned_url_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this file.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /api/v1/organizations:
    get:
      operationId: v1_organizations_list
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
          description: ''
    post:
      operationId: v1_organizations_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationCreate'
          description: ''
  /api/v1/organizations{id}/:
    get:
      operationId: v1_organizations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: v1_organizations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUpdate'
          description: ''
    patch:
      operationId: v1_organizations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganization'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: v1_organizations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/organizations{id}/add_member/:
    put:
      operationId: v1_organizations_add_member_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationAddRemoveMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationAddRemoveMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationAddRemoveMember'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAddRemoveMember'
          description: ''
  /api/v1/organizations{id}/remove_member/:
    put:
      operationId: v1_organizations_remove_member_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this organization.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationAddRemoveMember'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationAddRemoveMember'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationAddRemoveMember'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationAddRemoveMember'
          description: ''
  /api/v1/organizations/{organization_id}/projects:
    get:
      operationId: v1_organizations_projects_list
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: v1_organizations_projects_create
      parameters:
      - in: path
        name: organization_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreate'
          description: ''
  /api/v1/organizations/{organization_id}/projects{id}/:
    get:
      operationId: v1_organizations_projects_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: v1_organizations_projects_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectUpdate'
          description: ''
    patch:
      operationId: v1_organizations_projects_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: v1_organizations_projects_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this project.
        required: true
      - in: path
        name: organization_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: v1_users_list
      parameters:
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: is_staff
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: v1_users_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: v1_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/generate-upload-profile-image-presigned-url:
    post:
      operationId: v1_users_generate_upload_profile_image_presigned_url_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateProfileImageUploadUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateProfileImageUploadUrl'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateProfileImageUploadUrl'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileImageUploadUrl'
          description: ''
  /api/v1/users/retrieve_self/:
    get:
      operationId: v1_users_retrieve_self_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/update_self/:
    post:
      operationId: v1_users_update_self_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateSelf'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdateSelf'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateSelf'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateSelf'
          description: ''
components:
  schemas:
    File:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        filename:
          type: string
        filetype:
          $ref: '#/components/schemas/FiletypeEnum'
        bucket:
          type: string
          maxLength: 255
        location:
          type: string
      required:
      - bucket
      - filename
      - filetype
      - id
      - location
    FileCreate:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        filename:
          type: string
        filetype:
          $ref: '#/components/schemas/FiletypeEnum'
        bucket:
          type: string
          maxLength: 255
        location:
          type: string
      required:
      - bucket
      - filename
      - filetype
      - id
      - location
    FileRetrieve:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        presigned_url:
          type: string
          readOnly: true
        filename:
          type: string
        filetype:
          $ref: '#/components/schemas/FiletypeEnum'
        bucket:
          type: string
          maxLength: 255
        location:
          type: string
      required:
      - bucket
      - filename
      - filetype
      - id
      - location
      - presigned_url
    FiletypeEnum:
      enum:
      - IMAGE
      - VIDEO
      type: string
      description: |-
        * `IMAGE` - Image
        * `VIDEO` - Video
    GenerateProfileImageUploadUrl:
      type: object
      properties:
        filename:
          type: string
        content_type:
          type: string
      required:
      - content_type
      - filename
    LoginCookieToken:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          format: uuid
        admins:
          type: array
          items:
            type: string
            format: uuid
        members:
          type: array
          items:
            type: string
            format: uuid
      required:
      - created_at
      - id
      - name
      - owner
      - updated_at
    OrganizationAddRemoveMember:
      type: object
      properties:
        members:
          type: array
          items:
            type: string
            format: uuid
    OrganizationCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    OrganizationUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        admins:
          type: array
          items:
            type: string
            format: uuid
        members:
          type: array
          items:
            type: string
            format: uuid
      required:
      - id
      - name
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedFile:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
        filename:
          type: string
        filetype:
          $ref: '#/components/schemas/FiletypeEnum'
        bucket:
          type: string
          maxLength: 255
        location:
          type: string
    PatchedOrganization:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        owner:
          type: string
          format: uuid
        admins:
          type: array
          items:
            type: string
            format: uuid
        members:
          type: array
          items:
            type: string
            format: uuid
    PatchedProject:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        organization:
          type: string
          format: uuid
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        main_profile_image_url:
          type: string
    ProfileImageUploadUrl:
      type: object
      properties:
        url:
          type: string
        file_id:
          type: string
      required:
      - file_id
      - url
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        organization:
          type: string
          format: uuid
      required:
      - created_at
      - id
      - name
      - organization
      - updated_at
    ProjectCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    ProjectUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        main_profile_image_url:
          type: string
      required:
      - id
      - username
    UserCreate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        password:
          type: string
          writeOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        main_profile_image_url:
          type: string
      required:
      - id
      - password
      - username
    UserUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        main_profile_image_url:
          type: string
      required:
      - id
    UserUpdateSelf:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        main_profile_image_url:
          type: string
      required:
      - id
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
